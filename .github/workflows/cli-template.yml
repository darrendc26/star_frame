# name: CLI Template CI

# on:
#   push:
#     branches: ['**']
#     paths:
#       - "star_frame_cli/**"
#       - "star_frame_cli/src/template/**"
#   pull_request:
#     branches: ['**']
#     paths:
#       - "star_frame_cli/**"
#       - "star_frame_cli/src/template/**"

# jobs:
#   cli-template:
#     runs-on: ubuntu-latest
#     container:
#       image: solanalabs/solana:stable

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Install dependencies
#         run: |
#           apt-get update
#           apt-get install -y curl build-essential pkg-config libssl-dev ca-certificates git

#       - name: Setup Rust
#         uses: actions-rust-lang/setup-rust-toolchain@v1
#         with:
#           cache: 'false'
#           toolchain: stable
      
#       - name: Set default Rust toolchain and update
#         run: |
#           rustup default stable
#           rustup update stable

#       - name: Install cargo-release
#         uses: taiki-e/install-action@v2
#         with:
#           tool: cargo-release@0.25.17

#       - name: Verify Solana installation
#         run: |
#           solana --version
#           cargo --version

#       - name: Install sf CLI
#         run: |
#           cd star_frame_cli
#           cargo install --path .

#       - name: Generate test project
#         run: |
#           cd /tmp
#           sf new test_project

#       - name: Build generated project
#         run: |
#           cd /tmp/test_project
#           rm -f Cargo.lock
#           cargo build-sbf

name: CLI Template CI

on:
  push:
    branches: ['**']
    paths:
      - "star_frame_cli/**"
      - "star_frame_cli/src/template/**"
  pull_request:
    branches: ['**']
    paths:
      - "star_frame_cli/**"
      - "star_frame_cli/src/template/**"

jobs:
  cli-template:
    runs-on: ubuntu-latest
    container:
      image: solanalabs/solana:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install essential dependencies (curl, SSL libs, build tools)
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y curl build-essential pkg-config libssl-dev ca-certificates git

      # Setup Rust (stable) and update Cargo
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Update Rust and Cargo
        run: |
          rustup update stable
          rustup default stable
          cargo --version

      # Add SBF target for Solana programs
      - name: Add Solana SBF target
        run: rustup target add bpfel-unknown-unknown

      # Install Solana CLI (inside container)
      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/stable/install)"
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          solana-install init
          solana --version

      # Install your sf CLI
      - name: Install sf CLI
        run: |
          cd star_frame_cli
          cargo install --path .

      # Generate a test project
      - name: Generate test project
        run: |
          cd /tmp
          sf new test_project

      # Build the generated project with SBF
      - name: Build generated project
        run: |
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          cd /tmp/test_project
          rm -f Cargo.lock
          cargo build-sbf
