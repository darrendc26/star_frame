name: CLI Template CI

on:
  push:
    branches: ['**']
    paths:
      - "star_frame_cli/**"
      - "star_frame_cli/src/template/**"
  pull_request:
    branches: ['**']
    paths:
      - "star_frame_cli/**"
      - "star_frame_cli/src/template/**"

jobs:
  cli-template:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl build-essential pkg-config libssl-dev ca-certificates git

      - name: Clean Cargo cache (force fresh)
        shell: bash
        run: |
          rm -rf ~/.cargo/registry
          rm -rf ~/.cargo/git
          rm -rf ~/.cargo/.package-cache

      - name: Setup Rust (nightly)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          cache: false  # Disable to avoid cache issues

      - name: Configure Cargo
        shell: bash
        run: |
          mkdir -p ~/.cargo
          cat >> ~/.cargo/config.toml << 'EOF'
          [registries.crates-io]
          protocol = "sparse"
          
          [net]
          retry = 3
          git-fetch-with-cli = true
          
          [http]
          timeout = 60
          EOF

      - name: Verify Rust version
        shell: bash
        run: |
          rustc --version
          cargo --version
          # Check if this nightly supports resolver=3
          rustc --version | grep -E "nightly-202[45]"

      - name: Install Solana CLI v1.18.26
        shell: bash
        run: |
          curl -sSfL https://github.com/solana-labs/solana/releases/download/v1.18.26/solana-release-x86_64-unknown-linux-gnu.tar.bz2 -o solana.tar.bz2
          mkdir -p $HOME/.local/share/solana/install/active_release
          tar -xjf solana.tar.bz2 -C $HOME/.local/share/solana/install/active_release --strip-components=1
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Verify Solana CLI
        shell: bash
        run: |
          solana --version

      - name: Install Starframe CLI
        shell: bash
        run: |
          cd star_frame_cli
          RUSTFLAGS="-A warnings" cargo install --path .

      - name: Generate test project
        shell: bash
        run: |
          mkdir -p /tmp/test_project
          cd /tmp
          sf new test_project

      - name: Build SBF program
        shell: bash
        run: |
          set -euxo pipefail
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          cd /tmp/test_project
          cargo +nightly build-sbf -- -Znext-lockfile-bump

      - name: Run Rust tests
        shell: bash
        run: |
          cd /tmp/test_project
          cargo test