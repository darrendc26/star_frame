use star_frame::prelude::*;
use crate::{name_pascalcase}Error;

#[derive(Debug, GetSeeds, Clone)]
#[get_seeds(seed_const = b"COUNTER")]
pub struct CounterAccountSeeds {
    pub authority: Pubkey,
}

#[zero_copy(pod)]
#[derive(Default, Debug, Eq, PartialEq, ProgramAccount)]
#[program_account(seeds = CounterAccountSeeds)]
pub struct CounterAccount {
    pub authority: Pubkey,
    pub count: u64,
}

pub struct Authority(pub Pubkey);

impl AccountValidate<&Pubkey> for CounterAccount {
    fn validate_account(self_ref: &Self::Ref<'_>, signer: &Pubkey) -> Result<()> {
        if self_ref.authority.ne(signer) {
            return Err({name_pascalcase}Error::IncorrectAuthority.into());
        }
        Ok(())
    }
}
